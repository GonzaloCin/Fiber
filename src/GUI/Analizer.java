
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;
   
import Grouping.Calculus;
import Grouping.Database;
import Grouping.FCmeans;
import Grouping.Histogram;
import Grouping.Kmeans;
import Grouping.Kmeans3;
import Grouping.KohonenMap;
import Process.GlobalKnowledge;
import Process.LearnedRGB;
import Threads.BlackBoard;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Gonzalo
 */
public class Analizer extends javax.swing.JFrame {
    BufferedImage currentImage,showImage;
    Database base_de_datos;
    DefaultListModel images;
    //Kmeans kmeans;
    FCmeans FCM;
    Kmeans3 kmeans3;
    KohonenMap Som;
    File selectedImage;
    ArrayList<File> allImages;
    
    String namefile;
    boolean got3D=false;
    boolean gotFCM=false;
    
    
    /**
     * Creates new form AnalisisUsuario
     */
    public Analizer() {
        initComponents();
        AgregarSOM.setVisible(false);
        base_de_datos=new Database();
        images = new DefaultListModel();
        allImages=new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        TipoImagen = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        UltimaImagen = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TNADH = new javax.swing.JRadioButton();
        TATP = new javax.swing.JRadioButton();
        TCOX = new javax.swing.JRadioButton();
        AgregaFuzzy = new javax.swing.JButton();
        Agrega3d = new javax.swing.JButton();
        AgregarSOM = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        Agrega = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Aprendizaje Por Base de Imagenes");

        jScrollPane2.setMaximumSize(new java.awt.Dimension(3840, 2160));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(70, 70));
        jScrollPane2.setViewportView(UltimaImagen);

        jPanel1.setBackground(new java.awt.Color(240, 243, 240));
        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 270));
        jPanel1.setMinimumSize(new java.awt.Dimension(70, 70));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 170));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        TipoImagen.add(TNADH);
        TNADH.setSelected(true);
        TNADH.setText("NADH");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
        jPanel1.add(TNADH, gridBagConstraints);

        TipoImagen.add(TATP);
        TATP.setText("ATPasa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
        jPanel1.add(TATP, gridBagConstraints);

        TipoImagen.add(TCOX);
        TCOX.setText("COX");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
        jPanel1.add(TCOX, gridBagConstraints);

        AgregaFuzzy.setText("Agrega Fuzzy Cmeans");
        AgregaFuzzy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregaFuzzyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(AgregaFuzzy, gridBagConstraints);

        Agrega3d.setText("Agregar K3D");
        Agrega3d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Agrega3dActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(Agrega3d, gridBagConstraints);

        AgregarSOM.setText("Agregar SOM");
        AgregarSOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarSOMActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(AgregarSOM, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(249, 235, 235));
        jPanel2.setMaximumSize(new java.awt.Dimension(1920, 270));
        jPanel2.setMinimumSize(new java.awt.Dimension(70, 70));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 170));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(235, 249, 235));
        jPanel3.setMaximumSize(new java.awt.Dimension(1920, 270));
        jPanel3.setMinimumSize(new java.awt.Dimension(70, 70));
        jPanel3.setPreferredSize(new java.awt.Dimension(350, 170));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(235, 235, 243));
        jPanel4.setMaximumSize(new java.awt.Dimension(1920, 270));
        jPanel4.setMinimumSize(new java.awt.Dimension(70, 70));
        jPanel4.setPreferredSize(new java.awt.Dimension(350, 170));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportView(jList1);

        Agrega.setText("Agregar Imagen");
        Agrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Agrega, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Agrega))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregaFuzzyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregaFuzzyActionPerformed
        // TODO add your handling code here:
        byte tipoimagen=10;
        
        long TI,TF;
        byte n=3;
        if(TNADH.isSelected()){
            tipoimagen=0;
            n=3;
            
        }else if(TATP.isSelected()){
            tipoimagen=1;
            n=4;
        }else if(TCOX.isSelected()){
            tipoimagen=2;
            n=3;
        }
        TI=System.currentTimeMillis();
        
        if(!gotFCM && !got3D){
            base_de_datos.analyseComplete(allImages, 500000);
            gotFCM=true;
            }
            FCM = new FCmeans(n,0.3f,2f,base_de_datos.getComplete());
            FCM.clasify();
            
            TF=System.currentTimeMillis();
            System.out.printf("Tiempo de Ejecución= %d ms", TF-TI);
           
            float[][] res=((FCmeans)FCM).getResult();
            GlobalKnowledge.SaveFCM(res, tipoimagen);
        JOptionPane.showMessageDialog(null, "Listo, Fuzzy Cmeans Agregado\n Ahora Agrega Conocimiento en la Pagina Principal");
            System.out.printf("Tiempo de Ejecución= %d ms", TF-TI);
        
           JOptionPane.showMessageDialog(null, "Listo, Kmeans Agregado \n Ahora Agrega Conocimiento en la Pagina Principal");
    }//GEN-LAST:event_AgregaFuzzyActionPerformed

    private void AgregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregaActionPerformed
        // TODO add your handling code here:
        openImage();
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        base_de_datos.add(currentImage,0);
        images.addElement(""+this.namefile);
        jList1.setModel(images);
        jScrollPane1.setViewportView(jList1);
        
        int ver=(int)((UltimaImagen.getWidth()*currentImage.getHeight())/currentImage.getWidth());
        int hor=UltimaImagen.getWidth();
       showImage=Calculus.ReduceImage(currentImage,hor*ver);
       UltimaImagen.setIcon(new ImageIcon(showImage));
       Histogram.drawHistogram(base_de_datos.getRed(), jPanel2, Color.RED);
       Histogram.drawHistogram(base_de_datos.getGreen(), jPanel3, Color.GREEN);
       Histogram.drawHistogram(base_de_datos.getBlue(), jPanel4, Color.BLUE);
       setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
       
    }//GEN-LAST:event_AgregaActionPerformed

    private void openImage()
    {
        //Creamos la variable que será devuelta (la creamos como null)
        //Creamos un nuevo cuadro de diálogo para seleccionar imagen
        JFileChooser selector=new JFileChooser();
        //Le damos un título
        selector.setDialogTitle("Seleccione una imagen");
        //Filtramos los tipos de archivos
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG & GIF & BMP & TIFF", "jpg", "gif", "bmp","tif","tiff");
        selector.setFileFilter(filtroImagen);
        //Abrimos el cuadro de diálog
        if(BlackBoard.getImagePath() != null){
            selector.setCurrentDirectory(BlackBoard.getImagePath());
        }
        
        int flag=selector.showOpenDialog(null);
        //Comprobamos que pulse en aceptar
        if(flag==JFileChooser.APPROVE_OPTION)
        {
            try
            {
                //Devuelve el fichero seleccionado
                selectedImage=selector.getSelectedFile();
                //Asignamos a la variable bmp la imagen leida
                this.currentImage = ImageIO.read(selectedImage);
                this.namefile=selectedImage.getName();
                //System.out.println("\nAbsolute\t"+selectedImage.getAbsolutePath()+"\nCanonocal\t"+selectedImage.getCanonicalPath()+"\nName\t"+selectedImage.getName()+"\nPath\t"+selectedImage.getPath()+"\nParent\t"+selectedImage.getParent()+"\ntoString\t"+selectedImage.toString());
                BlackBoard.setImagePath(selectedImage.getAbsoluteFile());
                allImages.add(new File(selectedImage.getPath()));
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }       
        }        
    }
    
    private void Agrega3dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Agrega3dActionPerformed
        // TODO add your handling code here:
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        byte tipoimagen=10;
        long TI,TF;
        byte n=3;
        if(TNADH.isSelected()){
            tipoimagen=0;
            n=3;
            
        }else if(TATP.isSelected()){
            tipoimagen=1;
            n=4;
        }else if(TCOX.isSelected()){
            tipoimagen=2;
            n=3;
        }
        TI=System.currentTimeMillis();
            if(!got3D && !gotFCM){
            base_de_datos.analyseComplete(allImages, 500000);
            got3D=true;
            }
            kmeans3 = new Kmeans3(n,0.1f,base_de_datos.getComplete());
            kmeans3.clasify();
            
            TF=System.currentTimeMillis();
            System.out.printf("Tiempo de Ejecución= %d ms", TF-TI);
           
            float[][] res=((Kmeans3)kmeans3).getResult();
            GlobalKnowledge.SaveK3(res, tipoimagen);
            setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JOptionPane.showMessageDialog(null, "Listo, Kmeans 3d Agregado\n Ahora Agrega Conocimiento en la Pagina Principal");
    }//GEN-LAST:event_Agrega3dActionPerformed
    
    private void OrdenResultados(double[][] matres,int ve){
        for( int i=0;i<ve;i++){
            for(int j=0;j<ve-1;j++){
                if((Math.pow(matres[0][i],2)+Math.pow(matres[1][i],2)+Math.pow(matres[2][i],2))<(Math.pow(matres[0][j],2)+Math.pow(matres[1][j],2)+Math.pow(matres[2][j],2))){
                   double raux=matres[0][i];
                   double gaux=matres[1][i];
                   double baux=matres[2][i];
                   matres[0][i]=matres[0][j];
                   matres[1][i]=matres[1][j];
                   matres[2][i]=matres[2][j];
                   matres[0][j]=raux;
                   matres[1][j]=gaux;
                   matres[2][j]=baux;
                }
            }
        }
    }
    
    
    private void AgregarSOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarSOMActionPerformed
        // TODO add your handling code here:
                                      
        byte tipoimagen=10;
        
        long TI,TF;
        byte n=3;
        
        if(TNADH.isSelected()){
            tipoimagen=0;
            n=3;
            
        }else if(TATP.isSelected()){
            tipoimagen=1;
            n=4;
        }else if(TCOX.isSelected()){
            tipoimagen=2;
            n=3;
        }
        TI=System.currentTimeMillis();
            if(!got3D){
            base_de_datos.analyseComplete(allImages, 500000);
            got3D=true;
            }
            Som=new KohonenMap(n,0.1f,(byte)4,0.4f,base_de_datos.getComplete());
            Som.clasify();
            
            TF=System.currentTimeMillis();
            System.out.printf("Tiempo de Ejecución= %d ms", TF-TI);
            float[][] res=((KohonenMap)Som).getResult();
            
            GlobalKnowledge.SaveKM(res, tipoimagen);            
        //up.nfl.com
        
        JOptionPane.showMessageDialog(null, "Listo, SOM Agregado\n Ahora Agrega Conocimiento en la Pagina Principal");      
        
    }//GEN-LAST:event_AgregarSOMActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analizer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agrega;
    private javax.swing.JButton Agrega3d;
    private javax.swing.JButton AgregaFuzzy;
    private javax.swing.JButton AgregarSOM;
    private javax.swing.JRadioButton TATP;
    private javax.swing.JRadioButton TCOX;
    private javax.swing.JRadioButton TNADH;
    private javax.swing.ButtonGroup TipoImagen;
    private javax.swing.JLabel UltimaImagen;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
