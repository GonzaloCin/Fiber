/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;
import Grouping.Calculus;
import Images.AbstractImage; 
import Images.SeparatedImage;
import Process.Classifier; 
import Process.Contador;
import Process.GlobalKnowledge;
import Threads.BlackBoard;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
/**
 * Es la ventana principal, donde se eligen todas las opciones y se visualizan los resultados de la separación y el filtrado
 * @author Gonzalo Chávez
 * @author GustavoLeonardo
 * @author Omar López Ortega
 */
public class Main extends javax.swing.JFrame 
{
    EstadisticaCelulas FrameEstadistica;   
    MAHAGUI APHum;
    
    AbstractImage abstractImage;
    Classifier classifier;
    BufferedImage imagenOriginal;
    BufferedImage AUXMostrando;
    ImageIcon auxIcon;
    BufferedImage[] imPar;
    SeparatedImage[] separadas;
    SeparatedImage StoCount;
    Techniques TINCION;
    Algorithms algorithm;
    //AnalisisUsuario aprende;
    Analizer learn;
    
    Agregacion Agregar;
    private int resol;
    private int imageAmmount;
    
    /**
     * Constructor
     */ 
    public Main() 
    {
        abstractImage = new AbstractImage();
        classifier = new Classifier();
        resol = 1500000;
        initComponents();
        hideCombos();
        jSlider1.setEnabled(false);
        MenuAbrir.setEnabled(false);
        MenuGuardar.setEnabled(false);
        MenuProcesos.setEnabled(false);
        MenuOpciones.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoRes = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        ImagenOriginalLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ImagenProcesadaLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        BConteo = new javax.swing.JButton();
        ComboTipoFibra = new javax.swing.JComboBox();
        ComboFiltro = new javax.swing.JComboBox();
        ComboAlgoritmo = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuArchivo = new javax.swing.JMenu();
        MenuAbrir = new javax.swing.JMenuItem();
        MenuGuardar = new javax.swing.JMenu();
        GuardarOriginal = new javax.swing.JMenuItem();
        GuardarProcesada = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Salir = new javax.swing.JMenuItem();
        MenuProcesos = new javax.swing.JMenu();
        MenuHomN = new javax.swing.JMenu();
        MultiNADH = new javax.swing.JMenuItem();
        MultiATP = new javax.swing.JMenuItem();
        MultiCOX = new javax.swing.JMenuItem();
        MenuOpciones = new javax.swing.JMenu();
        Resolution = new javax.swing.JMenu();
        z05 = new javax.swing.JRadioButtonMenuItem();
        z10 = new javax.swing.JRadioButtonMenuItem();
        z15 = new javax.swing.JRadioButtonMenuItem();
        z20 = new javax.swing.JRadioButtonMenuItem();
        z25 = new javax.swing.JRadioButtonMenuItem();
        z30 = new javax.swing.JRadioButtonMenuItem();
        z35 = new javax.swing.JRadioButtonMenuItem();
        z50 = new javax.swing.JRadioButtonMenuItem();
        z80 = new javax.swing.JRadioButtonMenuItem();
        MenuAyuda = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();
        Language = new javax.swing.JMenu();
        setEnglish = new javax.swing.JMenuItem();
        setSpanish = new javax.swing.JMenuItem();
        MenuAprendizaje = new javax.swing.JMenu();
        AprendeMaquina = new javax.swing.JMenuItem();
        AprendeHumano = new javax.swing.JMenuItem();
        AprendeAgregacion = new javax.swing.JMenuItem();
        MenuCargar = new javax.swing.JMenu();
        CargaConocimiento = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fiber");
        setMaximumSize(new java.awt.Dimension(3840, 3840));
        setMinimumSize(new java.awt.Dimension(150, 120));

        jScrollPane1.setMaximumSize(new java.awt.Dimension(1920, 1920));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(70, 70));
        jScrollPane1.setName(""); // NOI18N
        jScrollPane1.setPreferredSize(new java.awt.Dimension(502, 461));

        ImagenOriginalLabel.setMaximumSize(new java.awt.Dimension(1920, 1920));
        ImagenOriginalLabel.setMinimumSize(new java.awt.Dimension(70, 70));
        jScrollPane1.setViewportView(ImagenOriginalLabel);

        jScrollPane2.setMaximumSize(new java.awt.Dimension(1920, 1920));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(70, 70));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(502, 461));
        jScrollPane2.setViewportView(ImagenProcesadaLabel);

        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 45));
        jPanel1.setMinimumSize(new java.awt.Dimension(70, 45));
        jPanel1.setPreferredSize(new java.awt.Dimension(502, 45));

        BConteo.setText("Conteo de Fibras");
        BConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConteoActionPerformed(evt);
            }
        });

        ComboTipoFibra.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipo de Fibra" }));
        ComboTipoFibra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTipoFibraActionPerformed(evt);
            }
        });

        ComboFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Separado", "Dilatacion", "Erosion", "Apertura", "E2D1", "E3D2", "E4D3", "E5D3" }));
        ComboFiltro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ComboFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboFiltroActionPerformed(evt);
            }
        });

        ComboAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Algoritmo" }));
        ComboAlgoritmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAlgoritmoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(ComboAlgoritmo, 0, 105, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboTipoFibra, 0, 120, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboFiltro, 0, 104, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BConteo)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BConteo)
                    .addComponent(ComboTipoFibra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setMaximumSize(new java.awt.Dimension(1920, 45));
        jPanel2.setMinimumSize(new java.awt.Dimension(70, 45));
        jPanel2.setPreferredSize(new java.awt.Dimension(502, 45));

        jSlider1.setMinimum(1);
        jSlider1.setEnabled(false);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel1.setText("Zoom:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuArchivo.setText("Archivo");

        MenuAbrir.setText("Abrir Imagen");
        MenuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAbrirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuAbrir);

        MenuGuardar.setText("Guardar Imagen...");

        GuardarOriginal.setText("Imagen Original");
        GuardarOriginal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarOriginalActionPerformed(evt);
            }
        });
        MenuGuardar.add(GuardarOriginal);

        GuardarProcesada.setText("Imagen Procesada");
        GuardarProcesada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarProcesadaActionPerformed(evt);
            }
        });
        MenuGuardar.add(GuardarProcesada);

        MenuArchivo.add(MenuGuardar);
        MenuArchivo.add(jSeparator1);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        MenuArchivo.add(Salir);

        jMenuBar1.add(MenuArchivo);

        MenuProcesos.setText("Procesos");

        MenuHomN.setText("Homogeneizar");

        MultiNADH.setText("NADH-TR");
        MultiNADH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiNADHActionPerformed(evt);
            }
        });
        MenuHomN.add(MultiNADH);

        MultiATP.setText("ATPasa");
        MultiATP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiATPActionPerformed(evt);
            }
        });
        MenuHomN.add(MultiATP);

        MultiCOX.setText("COX");
        MultiCOX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiCOXActionPerformed(evt);
            }
        });
        MenuHomN.add(MultiCOX);

        MenuProcesos.add(MenuHomN);

        jMenuBar1.add(MenuProcesos);

        MenuOpciones.setText("Opciones");

        Resolution.setText("Resolucion");
        Resolution.setToolTipText("Es la resulución ocupada para el procesamiento y conteo, mientras mas grande mas preciso, pero necesita mas recursos");

        GrupoRes.add(z05);
        z05.setText("0.5 Mpx");
        z05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z05ActionPerformed(evt);
            }
        });
        Resolution.add(z05);

        GrupoRes.add(z10);
        z10.setText("1.0 Mpx");
        z10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z10ActionPerformed(evt);
            }
        });
        Resolution.add(z10);

        GrupoRes.add(z15);
        z15.setSelected(true);
        z15.setText("1.5 Mpx");
        z15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z15ActionPerformed(evt);
            }
        });
        Resolution.add(z15);

        GrupoRes.add(z20);
        z20.setText("2.0 Mp");
        z20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z20ActionPerformed(evt);
            }
        });
        Resolution.add(z20);

        GrupoRes.add(z25);
        z25.setText("2.5 Mpx");
        z25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z25ActionPerformed(evt);
            }
        });
        Resolution.add(z25);

        GrupoRes.add(z30);
        z30.setText("3.0 Mpx");
        z30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z30ActionPerformed(evt);
            }
        });
        Resolution.add(z30);

        GrupoRes.add(z35);
        z35.setText("3.5 Mpx");
        z35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z35ActionPerformed(evt);
            }
        });
        Resolution.add(z35);

        GrupoRes.add(z50);
        z50.setText("5.0 Mpx");
        z50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z50ActionPerformed(evt);
            }
        });
        Resolution.add(z50);

        GrupoRes.add(z80);
        z80.setText("8.0 Mpx");
        z80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z80ActionPerformed(evt);
            }
        });
        Resolution.add(z80);

        MenuOpciones.add(Resolution);

        jMenuBar1.add(MenuOpciones);

        MenuAyuda.setText("Ayuda");

        about.setText("Acerca de..");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        MenuAyuda.add(about);

        Language.setText("Cambiar Idioma...");

        setEnglish.setText("Ingles");
        setEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setEnglishActionPerformed(evt);
            }
        });
        Language.add(setEnglish);

        setSpanish.setText("Español");
        setSpanish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSpanishActionPerformed(evt);
            }
        });
        Language.add(setSpanish);

        MenuAyuda.add(Language);

        jMenuBar1.add(MenuAyuda);

        MenuAprendizaje.setText("Aprendizade");

        AprendeMaquina.setText("Anadir Base de Imagenes");
        AprendeMaquina.setToolTipText("Usa algoritmos de minería de datos");
        AprendeMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AprendeMaquinaActionPerformed(evt);
            }
        });
        MenuAprendizaje.add(AprendeMaquina);

        AprendeHumano.setText("Guiado por Experto");
        AprendeHumano.setToolTipText("Indicar manualmente los colores de cada tipo de fibra");
        AprendeHumano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AprendeHumanoActionPerformed(evt);
            }
        });
        MenuAprendizaje.add(AprendeHumano);

        AprendeAgregacion.setText("Aprender por Agregación");
        AprendeAgregacion.setToolTipText("Una combinación de los métodos de inteligencia artificial y guiado por experto");
        AprendeAgregacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AprendeAgregacionActionPerformed(evt);
            }
        });
        MenuAprendizaje.add(AprendeAgregacion);

        jMenuBar1.add(MenuAprendizaje);

        MenuCargar.setText("Cargar");

        CargaConocimiento.setText("Carga Conocimiento");
        CargaConocimiento.setToolTipText("Añade el conocimiento de cualquier forma de aprendizaje");
        CargaConocimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargaConocimientoActionPerformed(evt);
            }
        });
        MenuCargar.add(CargaConocimiento);

        jMenuBar1.add(MenuCargar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAbrirActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        abstractImage.open_Image();
        this.setTitle("Fiber : "+ BlackBoard.getFileName());
        MenuGuardar.setEnabled(true);
        GuardarProcesada.setEnabled(false);
        MenuOpciones.setEnabled(true);
        uploadZoom();
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        //jSlider1.setEnabled(true); //Considerar despues
        
    }//GEN-LAST:event_MenuAbrirActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        System.exit(1);
    }//GEN-LAST:event_SalirActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        //TAl vez considerar depues
        double porcentaje= (jSlider1.getValue())*0.01;
        abstractImage.resizeImage(imagenOriginal, porcentaje);
        ImagenOriginalLabel.setIcon(new ImageIcon(abstractImage.getResizedImage()));
    }//GEN-LAST:event_jSlider1StateChanged

    private void ComboAlgoritmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAlgoritmoActionPerformed
        
        if(ComboAlgoritmo.isVisible()){    
            setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
            hideCombos();
            decideAlgorithm();
            ComboAlgoritmo.setVisible(true);
            
            ComboTipoFibra.setVisible(true);
            ComboTipoFibra.setSelectedIndex(0);
            
            separadas=classifier.fasthomogenizeMemberhsip(imagenOriginal,TINCION, algorithm);
            AUXMostrando=separadas[0].getImage();
            ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
            
            setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        }        
    }//GEN-LAST:event_ComboAlgoritmoActionPerformed

    private void BConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConteoActionPerformed
     setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
      Contador cuenta = new Contador(StoCount);
      cuenta.contarIslas();
      FrameEstadistica = new EstadisticaCelulas();
            FrameEstadistica.setTipo(ComboTipoFibra.getSelectedItem().toString());
            FrameEstadistica.setClusters(cuenta.getClusters());
            FrameEstadistica.setImages(abstractImage.getOriginalImage(),imPar[ComboTipoFibra.getSelectedIndex()],StoCount.getImage());//mod 
      
      setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      FrameEstadistica.setTitle(BlackBoard.getFileName());
      FrameEstadistica.setVisible(true);
    }//GEN-LAST:event_BConteoActionPerformed

    private void GuardarOriginalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarOriginalActionPerformed
        AbstractImage.guardar(imagenOriginal);
    }//GEN-LAST:event_GuardarOriginalActionPerformed

    private void GuardarProcesadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarProcesadaActionPerformed
         AbstractImage.guardar(AUXMostrando);
    }//GEN-LAST:event_GuardarProcesadaActionPerformed
                                              
    private void setEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setEnglishActionPerformed
        MenuArchivo.setText("File");
            MenuAbrir.setText("Open Image");
            MenuGuardar.setText("Save Image");
                GuardarOriginal.setText("Original");
                GuardarProcesada.setText("Processed");
            Salir.setText("Exit");
        MenuProcesos.setText("Processes");
            MenuHomN.setText("Homogenize");
        MenuOpciones.setText("Options");
            Resolution.setText("Resolution");
        MenuAyuda.setText("Help");
            about.setText("About");
            Language.setText("Change Language");
                setEnglish.setText("English");
                setSpanish.setText("Spanish");
        MenuAprendizaje.setText("Learning");
            AprendeMaquina.setText("Add Database");
            AprendeHumano.setText("Expert Guided");
            AprendeAgregacion.setText("Learn by Aggregation");
        MenuCargar.setText("Load");
            CargaConocimiento.setText("Load Knowledge");
    }//GEN-LAST:event_setEnglishActionPerformed

    private void setSpanishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSpanishActionPerformed
        MenuArchivo.setText("Archivo");
            MenuAbrir.setText("Abrir Imagen");
            MenuGuardar.setText("Guardar Imagen");
                GuardarOriginal.setText("Imagen Original");
                GuardarProcesada.setText("Imagen Procesada");
            Salir.setText("Salir");
        MenuProcesos.setText("Procesos");
            MenuHomN.setText("Homogeneizar");
        MenuOpciones.setText("Opciones");
            Resolution.setText("Resolucion");
        MenuAyuda.setText("Ayuda");
            about.setText("Acerca de..");
            Language.setText("Cambiar Idioma");
                setEnglish.setText("Ingles");
                setSpanish.setText("Español");
        MenuAprendizaje.setText("Aprendizaje");
            AprendeMaquina.setText("Anadir Base De Datos");
            AprendeHumano.setText("Guiado Por Experto");
            AprendeAgregacion.setText("Aprender por Agregacion");
        MenuCargar.setText("Cargar");
            CargaConocimiento.setText("Cargar Conocimiento");
    }//GEN-LAST:event_setSpanishActionPerformed

    private void AprendeMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AprendeMaquinaActionPerformed
        learn=new Analizer();
        learn.setVisible(true);        
    }//GEN-LAST:event_AprendeMaquinaActionPerformed

    private void CargaConocimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargaConocimientoActionPerformed
        if(GlobalKnowledge.isAssignedNADH() || GlobalKnowledge.isAssignedATP() || GlobalKnowledge.isAssignedCOX()){
            MenuAbrir.setEnabled(true);
            MenuProcesos.setEnabled(true);
            MenuHomN.setEnabled(true);
            MultiNADH.setEnabled(GlobalKnowledge.isAssignedNADH());
            MultiATP.setEnabled(GlobalKnowledge.isAssignedATP());
            MultiCOX.setEnabled(GlobalKnowledge.isAssignedCOX());
        } 
    }//GEN-LAST:event_CargaConocimientoActionPerformed

    private void ComboTipoFibraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTipoFibraActionPerformed
        // TODO add your handling code here:
        if(ComboTipoFibra.isVisible()){
            int selectedIndex = ComboTipoFibra.getSelectedIndex();
            switch (selectedIndex) 
            {
                case 0:
                    imPar[0]=separadas[0].getImage();
                    AUXMostrando=imPar[0];
                    ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                    ComboFiltro.setVisible(false);
                    break;
                case 1:
                case 2:
                case 3:
                    imPar[selectedIndex]=separadas[selectedIndex].getImage();
                    AUXMostrando=imPar[selectedIndex];
                    ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                    ComboFiltro.setSelectedIndex(0);
                    ComboFiltro.setVisible(true);
                break; 
                default:
                    throw new AssertionError();
            }
            BConteo.setVisible(false);
        }
    }//GEN-LAST:event_ComboTipoFibraActionPerformed

    private void AprendeHumanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AprendeHumanoActionPerformed
        // TODO add your handling code here:
        APHum= new MAHAGUI();
        APHum.setVisible(true);
        //APHum.dispose();
        
    }//GEN-LAST:event_AprendeHumanoActionPerformed

    private void AprendeAgregacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AprendeAgregacionActionPerformed
        // TODO add your handling code here:
        Agregar=new Agregacion();
        Agregar.setVisible(true);
        
        
    }//GEN-LAST:event_AprendeAgregacionActionPerformed

    private void MultiNADHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiNADHActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));//Tal vez sea bueno mostrar un JOption pane no cerrable
        TINCION=Techniques.NADH;
        imageAmmount=3;
        
        homogenizeTasks();
                
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        System.gc();
               
    }//GEN-LAST:event_MultiNADHActionPerformed

    private void MultiCOXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiCOXActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        TINCION=Techniques.COX;
        imageAmmount=3;
        
        homogenizeTasks();
        
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        System.gc();
    }//GEN-LAST:event_MultiCOXActionPerformed

    private void MultiATPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiATPActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        TINCION=Techniques.ATPASA;
        imageAmmount=4;
        
        homogenizeTasks();
        
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        System.gc();
    }//GEN-LAST:event_MultiATPActionPerformed

    private void ComboFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboFiltroActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        switch (ComboFiltro.getSelectedItem().toString()) 
        {
            case "Separado":
                AUXMostrando=imPar[ComboTipoFibra.getSelectedIndex()];
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(false);
                break;
            case "Erosion":
                StoCount=Calculus.Erode(separadas[ComboTipoFibra.getSelectedIndex()]);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
            case "Dilatacion":
                StoCount=Calculus.Dilate(separadas[ComboTipoFibra.getSelectedIndex()]);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
            case "Apertura":
                StoCount=Calculus.Opening(separadas[ComboTipoFibra.getSelectedIndex()]);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
            case "Cerradura":
                StoCount=Calculus.Closing(separadas[ComboTipoFibra.getSelectedIndex()]);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
            case "E2D1":
                StoCount=Calculus.OpeningNM(separadas[ComboTipoFibra.getSelectedIndex()],2,1);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
                
            case "E3D2":
                StoCount=Calculus.OpeningNM(separadas[ComboTipoFibra.getSelectedIndex()],3,2);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
            case "E4D3":
                StoCount=Calculus.OpeningNM(separadas[ComboTipoFibra.getSelectedIndex()],4,3);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
            case "E5D3":
                StoCount=Calculus.OpeningNM(separadas[ComboTipoFibra.getSelectedIndex()],5,3);
                AUXMostrando=StoCount.getImage();
                ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
                BConteo.setVisible(true);
                break;
            default:
                throw new AssertionError();
        }
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_ComboFiltroActionPerformed

    private void z10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z10ActionPerformed
        resol=1000000;
        uploadZoom();
    }//GEN-LAST:event_z10ActionPerformed

    private void z20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z20ActionPerformed
        resol=2000000;
        uploadZoom();
    }//GEN-LAST:event_z20ActionPerformed

    private void z25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z25ActionPerformed
        resol=2500000;
        uploadZoom();
    }//GEN-LAST:event_z25ActionPerformed

    private void z30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z30ActionPerformed
        // TODO add your handling code here:
            resol=3000000;
        uploadZoom();
    }//GEN-LAST:event_z30ActionPerformed

    private void z35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z35ActionPerformed
        resol=3500000;
        uploadZoom();
    }//GEN-LAST:event_z35ActionPerformed

    private void z05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z05ActionPerformed
        resol=500000;
        uploadZoom();
    }//GEN-LAST:event_z05ActionPerformed

    private void z15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z15ActionPerformed
        // TODO add your handling code here:
            resol=1500000;
        uploadZoom();
    }//GEN-LAST:event_z15ActionPerformed

    private void z50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z50ActionPerformed
        resol=5000000;
        uploadZoom();
    }//GEN-LAST:event_z50ActionPerformed

    private void z80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z80ActionPerformed
        resol=8000000;
        uploadZoom();
    }//GEN-LAST:event_z80ActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        //Maybe Open a OJotionPane
    }//GEN-LAST:event_aboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AprendeAgregacion;
    private javax.swing.JMenuItem AprendeHumano;
    private javax.swing.JMenuItem AprendeMaquina;
    private javax.swing.JButton BConteo;
    private javax.swing.JMenuItem CargaConocimiento;
    private javax.swing.JComboBox ComboAlgoritmo;
    private javax.swing.JComboBox ComboFiltro;
    private javax.swing.JComboBox ComboTipoFibra;
    private javax.swing.ButtonGroup GrupoRes;
    private javax.swing.JMenuItem GuardarOriginal;
    private javax.swing.JMenuItem GuardarProcesada;
    private javax.swing.JLabel ImagenOriginalLabel;
    private javax.swing.JLabel ImagenProcesadaLabel;
    private javax.swing.JMenu Language;
    private javax.swing.JMenuItem MenuAbrir;
    private javax.swing.JMenu MenuAprendizaje;
    private javax.swing.JMenu MenuArchivo;
    private javax.swing.JMenu MenuAyuda;
    private javax.swing.JMenu MenuCargar;
    private javax.swing.JMenu MenuGuardar;
    private javax.swing.JMenu MenuHomN;
    private javax.swing.JMenu MenuOpciones;
    private javax.swing.JMenu MenuProcesos;
    private javax.swing.JMenuItem MultiATP;
    private javax.swing.JMenuItem MultiCOX;
    private javax.swing.JMenuItem MultiNADH;
    private javax.swing.JMenu Resolution;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenuItem about;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JMenuItem setEnglish;
    private javax.swing.JMenuItem setSpanish;
    private javax.swing.JRadioButtonMenuItem z05;
    private javax.swing.JRadioButtonMenuItem z10;
    private javax.swing.JRadioButtonMenuItem z15;
    private javax.swing.JRadioButtonMenuItem z20;
    private javax.swing.JRadioButtonMenuItem z25;
    private javax.swing.JRadioButtonMenuItem z30;
    private javax.swing.JRadioButtonMenuItem z35;
    private javax.swing.JRadioButtonMenuItem z50;
    private javax.swing.JRadioButtonMenuItem z80;
    // End of variables declaration//GEN-END:variables

    private void uploadZoom(){
        imagenOriginal=Calculus.ReduceImage(abstractImage.getOriginalImage(),resol);
        ImagenOriginalLabel.setIcon(new ImageIcon(imagenOriginal));
        ImagenProcesadaLabel.setIcon(null);
        imPar=null;
        System.gc();
        hideCombos();
        GuardarProcesada.setEnabled(false);
    }

    private void hideCombos(){
        ComboAlgoritmo.setVisible(false);
        ComboTipoFibra.setVisible(false);
        ComboFiltro.setVisible(false);
        BConteo.setVisible(false);
        StoCount=null;
    }

    private void decideAlgorithm(){
        if(algorithm == Algorithms.Unknown){
            switch (ComboAlgoritmo.getSelectedItem().toString()){
                case "Fuzzy CMeans":
                    algorithm = Algorithms.FuzzyCMeans;
                break;
                case "Kmeans3D":
                    algorithm = Algorithms.KMeans3D;
                break;
                case "Kohonen Map":
                    algorithm = Algorithms.KohonenMap;
                break;
                case "Experto":
                    algorithm = Algorithms.Expert;
                break;
                case "Aggregated":
                    algorithm = Algorithms.Aggregated;
                break;
            }
        }
    }

    private void conformComboAlgorithms(){
        if(GlobalKnowledge.isAssignedFCM(TINCION)){
                ComboAlgoritmo.addItem("Fuzzy CMeans");
        }
        if(GlobalKnowledge.isAssignedK3(TINCION)){
            ComboAlgoritmo.addItem("Kmeans3D");
        }
        if(GlobalKnowledge.isAssignedKM(TINCION)){
            ComboAlgoritmo.addItem("Kohonen Map");
        }
        if(GlobalKnowledge.isAssignedH(TINCION)){
            ComboAlgoritmo.addItem("Experto");
            ComboAlgoritmo.setSelectedItem("Experto");
            algorithm= Algorithms.Expert;
        }
        if(GlobalKnowledge.isAssignedAg(TINCION)){
            ComboAlgoritmo.addItem("Aggregated");
        }
    }

    private void conformComboFiberType(){
        if(TINCION == Techniques.ATPASA){
            ComboTipoFibra.addItem("Homogeneizada");
            ComboTipoFibra.addItem("Intermedias");
            ComboTipoFibra.addItem("Rapidas");
            ComboTipoFibra.addItem("Lentas");
        }else{  
            ComboTipoFibra.addItem("Homogeneizada");
            ComboTipoFibra.addItem("Oxidativas");
            ComboTipoFibra.addItem("Glucoliticas");
        }
        
    }
    
    private void homogenizeTasks(){
        hideCombos();
        
        ComboAlgoritmo.removeAllItems();
        ComboTipoFibra.removeAllItems();
        
        algorithm = Algorithms.Unknown;
        conformComboAlgorithms();
        decideAlgorithm();     
        ComboAlgoritmo.setVisible(true);
        
        conformComboFiberType();
        ComboTipoFibra.setVisible(true);
        
        separadas=classifier.fasthomogenizeMemberhsip(imagenOriginal,TINCION,algorithm);
        AUXMostrando=separadas[0].getImage();
        ImagenProcesadaLabel.setIcon(new ImageIcon(AUXMostrando));
       
        GuardarProcesada.setEnabled(true);
        imPar=new BufferedImage[imageAmmount];
    }
}